This is a new feature that I have just added to the program. I am not sure if this will work, so I created another branch aside from the master branch called NewBranch.

After I am done with the new feature, I will try to run it and see if it can be executed successfully. If the program fails to run, I will correct it from this new branch until it works and merge it with my master branch.

Before merging the new branch with my master branch, I have also observed the differences between the two branches by using the git diff master NewBranch command. Some files that I have created in my new branch did not appear in my master branch, so I have to merge it with the master branch in order for all the new files to be added into it.

Also, I added, committed, and pushed all the files to GitHub with my Macbook. Then, I tried cloning the repo from GitHub to my local machine by using git clone. Eventually, I was able to access all the files and directories from my local machine. 

Finally, I editted a file on purpose to make some mistakes and committed it with the git commit command. Then, I used the git revert command to revert it to the status before this commit was initialized. The terminal executed the command successfully and I was able to access to the original file before the changes were made. Besides that, I did utilize the git status and git log --oneline command to observe my current file status together with all the commits that I have made.

I am glad to say that I learned a lot from this assignment. Thanks and have fun!

Brian
